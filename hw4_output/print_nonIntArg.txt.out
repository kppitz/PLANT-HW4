TOKEN: LPAREN  LEXEME: (
TOKEN: LETSTAR  LEXEME: let*

___Entering new scope...

TOKEN: LPAREN  LEXEME: (
ID_EXPR_LIST -> epsilon
TOKEN: LPAREN  LEXEME: (
TOKEN: IDENT  LEXEME: sub
TOKEN: LPAREN  LEXEME: (
TOKEN: LAMBDA  LEXEME: lambda

___Entering new scope...

TOKEN: LPAREN  LEXEME: (
ID_LIST -> epsilon
TOKEN: IDENT  LEXEME: x
ID_LIST -> ID_LIST IDENT
___Adding x to symbol table
TOKEN: IDENT  LEXEME: y
ID_LIST -> ID_LIST IDENT
___Adding y to symbol table
TOKEN: RPAREN  LEXEME: )
TOKEN: LPAREN  LEXEME: (
TOKEN: SUB  LEXEME: -
ARITH_OP -> -
BIN_OP -> ARITH_OP
TOKEN: IDENT  LEXEME: x
EXPR -> IDENT
TOKEN: IDENT  LEXEME: y
EXPR -> IDENT
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN  LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
LAMBDA_EXPR -> lambda ( ID_LIST ) EXPR

___Exiting scope...

PARENTHESIZED_EXPR -> LAMBDA_EXPR
TOKEN: RPAREN  LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: RPAREN  LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )
___Adding sub to symbol table
TOKEN: RPAREN  LEXEME: )
TOKEN: LPAREN  LEXEME: (
TOKEN: PRINT  LEXEME: print
TOKEN: IDENT  LEXEME: sub
EXPR -> IDENT
PRINT_EXPR -> print EXPR
PARENTHESIZED_EXPR -> PRINT_EXPR
TOKEN: RPAREN  LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
LET_EXPR -> let* ( ID_EXPR_LIST ) EXPR

___Exiting scope...

Line 3: Arg 2 cannot be function
